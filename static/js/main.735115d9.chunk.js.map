{"version":3,"sources":["react-auth0-spa.js","components/NavBar.js","utils/history.js","components/PrivateRoute.js","components/Auction.js","components/BidModal.js","pages/AuctionsPage.js","components/PictureUpload.js","pages/CreateAuctionPage.js","components/LoadingSpinner.js","App.js","serviceWorker.js","stores/AuthStore.js","stores/OverlayStore.js","stores/AuctionStore.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","authStore","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","getIdTokenClaims","tokenClaims","token","__raw","setClaims","setToken","initAuth0","loginWithPopup","params","console","error","Provider","value","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","useStyles","makeStyles","navbar","background","padding","marginBottom","display","width","boxSizing","header","flexBasis","loginLogoutContainer","justifyContent","alignItems","button","color","inject","auth0","classes","className","style","fontSize","Button","onClick","createBrowserHistory","PrivateRoute","Component","component","path","rest","targetUrl","fn","render","props","root","media","height","bidButton","borderWidth","cardActions","detailsContainer","details","paddingTop","paddingBottom","textAlign","Label","styled","p","Value","span","Auction","auction","onBid","bidState","amount","highestBid","pictureUrl","Card","CardActionArea","CardHeader","avatar","Avatar","aria-label","seller","toUpperCase","CardMedia","image","CardContent","date","endingAt","renderer","hours","minutes","seconds","CardActions","disabled","variant","theme","modal","outline","paper","backgroundColor","palette","spacing","borderRadius","observer","auctionStore","onCancel","biddingOn","Modal","aria-labelledby","aria-describedby","open","onClose","setBiddingOn","closeAfterTransition","Fade","in","noValidate","autoComplete","FormControl","fullWidth","margin","InputLabel","htmlFor","Input","id","bidAmount","onChange","e","setBidAmount","target","type","startAdornment","InputAdornment","position","float","placeBid","auctionsContainer","flexWrap","maxWidth","auctionCard","containerWidth","flexShrink","fabContainer","bottom","right","createAuctionButton","routerHistory","log","fetchAuctions","setInterval","process","auctions","length","map","email","bidder","key","renderAuctions","Fab","push","container","border","cursor","preview","PictureUpload","input","onPictureSelected","base64","setBase64","handleFileChange","file","files","reader","FileReader","readAsDataURL","onload","result","ref","ButtonBase","click","src","alt","form","pictureUpload","marginTop","setTitle","createAuction","Container","fixed","TextField","label","placeholder","spinnerContainer","zIndex","LoadingSpinner","displayValue","CircularProgress","overlayStore","displaySpinner","exact","AuctionsPage","CreateAuctionPage","Boolean","hostname","match","this","claims","observable","action","status","axios","Axios","create","baseURL","get","headers","Authorization","AuthStore","data","alert","forEach","OverlayStore","setLoadingSpinner","patch","pictureBase64","post","createAuctionResult","auctionId","ReactDOM","AuctionStore","domain","client_id","redirect_uri","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.735115d9.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n  window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nexport const Auth0Context = React.createContext();\r\nexport const useAuth0 = () => useContext(Auth0Context);\r\nexport const Auth0Provider = ({\r\n  authStore,\r\n  children,\r\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n  ...initOptions\r\n}) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState();\r\n  const [user, setUser] = useState();\r\n  const [auth0Client, setAuth0] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const initAuth0 = async () => {\r\n      const auth0FromHook = await createAuth0Client(initOptions);\r\n      setAuth0(auth0FromHook);\r\n\r\n      if (window.location.search.includes(\"code=\") &&\r\n          window.location.search.includes(\"state=\")) {\r\n        const { appState } = await auth0FromHook.handleRedirectCallback();\r\n        onRedirectCallback(appState);\r\n      }\r\n\r\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\r\n\r\n      setIsAuthenticated(isAuthenticated);\r\n\r\n      if (isAuthenticated) {\r\n        const user = await auth0FromHook.getUser();\r\n        const tokenClaims = await auth0FromHook.getIdTokenClaims();\r\n        const token = tokenClaims.__raw;\r\n        authStore.setClaims(user);\r\n        authStore.setToken(token);\r\n        setUser(user);\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    initAuth0();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const loginWithPopup = async (params = {}) => {\r\n    setPopupOpen(true);\r\n    try {\r\n      await auth0Client.loginWithPopup(params);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setPopupOpen(false);\r\n    }\r\n    const user = await auth0Client.getUser();\r\n    setUser(user);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const handleRedirectCallback = async () => {\r\n    setLoading(true);\r\n    await auth0Client.handleRedirectCallback();\r\n    const user = await auth0Client.getUser();\r\n    setLoading(false);\r\n    setIsAuthenticated(true);\r\n    setUser(user);\r\n  };\r\n  \r\n  return (\r\n    <Auth0Context.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        loading,\r\n        popupOpen,\r\n        loginWithPopup,\r\n        handleRedirectCallback,\r\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n        logout: (...p) => auth0Client.logout(...p)\r\n      }}\r\n    >\r\n      {children}\r\n    </Auth0Context.Provider>\r\n  );\r\n};","import React from \"react\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\nimport { inject } from \"mobx-react\";\r\nimport { makeStyles, Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  navbar: {\r\n    background:\r\n      \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(4,19,62,1) 2%, rgba(6,31,80,1) 4%, rgba(7,44,98,1) 8%, rgba(9,61,121,1) 29%, rgba(7,89,145,1) 53%, rgba(5,129,181,1) 86%, rgba(0,212,255,1) 100%)\",\r\n    padding: 14,\r\n    marginBottom: 24,\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    boxSizing: \"border-box\",\r\n  },\r\n  header: {\r\n    flexBasis: \"50%\",\r\n    display: \"flex\",\r\n  },\r\n  loginLogoutContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    flexBasis: \"50%\",\r\n  },\r\n  button: {\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nconst NavBar = ({ authStore }) => {\r\n  const auth0 = useAuth0();\r\n  const { loginWithRedirect, logout } = auth0;\r\n  const isAuthenticated = authStore.token;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.navbar}>\r\n      <div className={classes.header}>\r\n        <h1 style={{ fontSize: 14, color: \"white\" }}>YD AUCTIONS</h1>\r\n      </div>\r\n      <div className={classes.loginLogoutContainer}>\r\n        {!isAuthenticated && (\r\n          <Button\r\n            className={classes.button}\r\n            onClick={() => loginWithRedirect({})}\r\n          >\r\n            Sign in\r\n          </Button>\r\n        )}\r\n\r\n        {isAuthenticated && (\r\n          <Button className={classes.button} onClick={() => logout({})}>\r\n            Sign out\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default inject([\"authStore\"])(NavBar);\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();","import React, { useEffect } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\n\r\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\r\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\r\n\r\n  useEffect(() => {\r\n    if (loading || isAuthenticated) {\r\n      return;\r\n    }\r\n    const fn = async () => {\r\n      await loginWithRedirect({\r\n        appState: {targetUrl: window.location.pathname}\r\n      });\r\n    };\r\n    fn();\r\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\r\n\r\n  const render = props =>\r\n    isAuthenticated === true ? <Component {...props} /> : null;\r\n\r\n  return <Route path={path} render={render} {...rest} />;\r\n};\r\n\r\nexport default PrivateRoute;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Countdown from \"react-countdown\";\r\nimport { Grid, CardHeader, Avatar } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  media: {\r\n    height: 280,\r\n  },\r\n  bidButton: {\r\n    width: \"70%\",\r\n    background:\r\n      \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(4,19,62,1) 0%, rgba(6,31,80,1) 0%, rgba(7,44,98,1) 6%, rgba(9,61,121,1) 29%, rgba(7,89,145,1) 67%, rgba(5,129,181,1) 100%, rgba(9,123,146,1) 100%)\",\r\n    borderWidth: 0,\r\n    color: \"white\",\r\n  },\r\n  cardActions: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    padding: 12,\r\n  },\r\n  detailsContainer: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexBasis: \"50%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingTop: 18,\r\n    paddingBottom: 10,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst Label = styled.p`\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  color: #919191;\r\n`;\r\n\r\nconst Value = styled.span`\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Auction = ({ auction, onBid, bidState }) => {\r\n  const classes = useStyles();\r\n  const amount = auction.highestBid.amount;\r\n\r\n  const pictureUrl = auction.pictureUrl\r\n    ? auction.pictureUrl\r\n    : \"placeholder.png\";\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n              {auction.seller[0].toUpperCase()}\r\n            </Avatar>\r\n          }\r\n          title={auction.title}\r\n        />\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={pictureUrl}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent className={classes.detailsContainer}>\r\n          <div className={classes.details}>\r\n            <div>\r\n              <Value>{amount === 0 ? \"No bids\" : `$${amount}`}</Value>\r\n              <Label>HIGHEST BID</Label>\r\n            </div>\r\n          </div>\r\n          <div className={classes.details}>\r\n            <div>\r\n              <Countdown\r\n                date={auction.endingAt}\r\n                renderer={({ hours, minutes, seconds }) => (\r\n                  <Value>\r\n                    {hours} hours {minutes} mins {seconds} secs\r\n                  </Value>\r\n                )}\r\n              />\r\n              <Label>TIME REMAINING</Label>\r\n            </div>\r\n          </div>\r\n          {/* <Grid container spacing={3} style={{ width: '100%', margin: 'auto' }}>\r\n            <Grid item xs={4} style={{ textAlign: 'center' }}>\r\n              <Value>{amount === 0 ? 'No bids' : `$${amount}`}</Value>\r\n              <Label>HIGHEST BID</Label>\r\n            </Grid>\r\n            <Grid item xs={8} style={{ textAlign: 'center' }}>\r\n              <p>\r\n                <Countdown\r\n                  date={auction.endingAt}\r\n                  renderer={({ hours, minutes, seconds }) => (\r\n                    <Value>\r\n                     {hours} hours {minutes} mins {seconds} secs\r\n                    </Value>\r\n                  )}\r\n                />\r\n              </p>\r\n              <Label>TIME REMAINING</Label>\r\n            </Grid>\r\n          </Grid> */}\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <div className={classes.cardActions}>\r\n          {(bidState === \"OWN_AUCTION\" || bidState === \"HIGHEST_BIDDER\") && (\r\n            <Button disabled={true} onClick={() => onBid()}>\r\n              {bidState === \"OWN_AUCTION\"\r\n                ? \"This is your auction\"\r\n                : \"You are the highest bidder\"}\r\n            </Button>\r\n          )}\r\n\r\n          {bidState === \"CAN_BID\" && (\r\n            <Button\r\n              variant=\"outlined\"\r\n              className={classes.bidButton}\r\n              onClick={() => onBid()}\r\n            >\r\n              Bid now!\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Auction;\r\n","import React, { useState } from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport {\r\n  Modal,\r\n  makeStyles,\r\n  Fade,\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  InputAdornment,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    outline: 0,\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline: 0,\r\n    borderRadius: 10,\r\n  },\r\n}));\r\n\r\nconst BidModal = ({ auctionStore, onCancel }) => {\r\n  const classes = useStyles();\r\n  const auction = auctionStore.biddingOn;\r\n\r\n  if (!auction) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className={classes.modal}\r\n      open={!!auction}\r\n      onClose={() => auctionStore.setBiddingOn(null)}\r\n      closeAfterTransition\r\n    >\r\n      <Fade in={!!auction}>\r\n        <div className={classes.paper}>\r\n          <h2>Bid on \"{auction.title}\"</h2>\r\n          <form noValidate autoComplete=\"off\">\r\n            <FormControl fullWidth className={classes.margin}>\r\n              <InputLabel htmlFor=\"standard-adornment-amount\">\r\n                Bid Amount\r\n              </InputLabel>\r\n              <Input\r\n                id=\"standard-adornment-amount\"\r\n                value={auctionStore.bidAmount}\r\n                onChange={(e) => auctionStore.setBidAmount(e.target.value)}\r\n                type=\"number\"\r\n                startAdornment={\r\n                  <InputAdornment position=\"start\">$</InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n            <br/><br/>\r\n            <div>\r\n              <Button\r\n                style={{ float: 'right' }}\r\n                onClick={() => auctionStore.placeBid()}\r\n              >\r\n                  Place Bid\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default inject([\"auctionStore\"])(observer(BidModal));\r\n","import React, { useEffect } from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport Auction from \"../components/Auction\";\r\nimport BidModal from \"../components/BidModal\";\r\nimport { Fab, makeStyles } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst containerWidth = 1000;\r\nconst cardPadding = 14;\r\nconst cardWidth = containerWidth / 2 - cardPadding * 2;\r\n\r\nconst useStyles = makeStyles({\r\n  auctionsContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    maxWidth: containerWidth,\r\n    margin: \"auto\",\r\n    \"@media (max-width: 900px)\": {\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  auctionCard: {\r\n    flexBasis: cardWidth,\r\n    flexShrink: 0,\r\n    padding: cardPadding,\r\n  },\r\n  fabContainer: {\r\n    position: \"fixed\",\r\n    bottom: 20,\r\n    right: 20,\r\n  },\r\n  createAuctionButton: {\r\n    background: \"#075991\",\r\n  },\r\n});\r\n\r\nconst AuctionsPage = (props) => {\r\n  const { auctionStore, authStore, routerHistory } = props;\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      console.log(\"HOLA\");\r\n      await auctionStore.fetchAuctions();\r\n      setInterval(() => {\r\n        if (\r\n          routerHistory.location.pathname === \"/auctions\" ||\r\n          routerHistory.location.pathname === \"/\"\r\n        ) {\r\n          auctionStore.fetchAuctions();\r\n        }\r\n      }, process.env.REACT_APP_REFRESH_RATE);\r\n    })();\r\n  }, [auctionStore, routerHistory]);\r\n\r\n  const renderAuctions = () => {\r\n    const { auctions } = auctionStore;\r\n\r\n    if (!auctions.length) {\r\n      return (\r\n        <div style={{ textAlign: \"center\", width: \"100%\" }}>\r\n          <h4>No auctions available. Create one?</h4>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return auctions.map((auction) => {\r\n      let bidState = \"CAN_BID\";\r\n\r\n      if (auction.seller === authStore.email) {\r\n        bidState = \"OWN_AUCTION\";\r\n      }\r\n\r\n      if (auction.highestBid.bidder === authStore.email) {\r\n        bidState = \"HIGHEST_BIDDER\";\r\n      }\r\n\r\n      return (\r\n        <div key={auction.id} className={classes.auctionCard}>\r\n          <Auction\r\n            auction={auction}\r\n            bidState={bidState}\r\n            onBid={() => auctionStore.setBiddingOn(auction)}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.auctionsContainer}>\r\n      <BidModal />\r\n\r\n      {renderAuctions()}\r\n\r\n      <div className={classes.fabContainer}>\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          className={classes.createAuctionButton}\r\n          onClick={() => routerHistory.push(\"/create\")}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default inject(\r\n  \"auctionStore\",\r\n  \"authStore\",\r\n  \"routerHistory\"\r\n)(observer(AuctionsPage));\r\n","import React, { Fragment, useState } from 'react';\r\nimport { makeStyles, ButtonBase } from '@material-ui/core';\r\nimport PictureIcon from '@material-ui/icons/BurstMode';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    width: 300,\r\n    height: 100,\r\n    border: '2px dashed #a1a1a1',\r\n    borderRadius: 5,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    cursor: 'copy',\r\n  },\r\n  preview: {\r\n    width: 300,\r\n    borderRadius: 5,\r\n  }\r\n});\r\n\r\nconst PictureUpload = ({ onPictureSelected }) => {\r\n  const [base64, setBase64] = useState(null);\r\n  const classes = useStyles();\r\n  let input;\r\n\r\n  const handleFileChange = async e => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      setBase64(reader.result);\r\n      onPictureSelected(reader.result);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <input\r\n        style={{ display: 'none' }}\r\n        ref={ref => input = ref}\r\n        type=\"file\"\r\n        onChange={handleFileChange}\r\n      />\r\n      \r\n      {\r\n        !base64 && (\r\n          <ButtonBase onClick={() => input.click()}>\r\n            <div className={classes.container}>\r\n              <PictureIcon color=\"disabled\" />\r\n            </div>\r\n          </ButtonBase>\r\n        )\r\n      }\r\n\r\n      {\r\n        base64 && (\r\n          <img className={classes.preview} src={base64} alt=\"Auction\" />\r\n        )\r\n      }\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PictureUpload;","import React, { useState } from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport {\r\n  Container,\r\n  FormControl,\r\n  Button,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport PictureUpload from '../components/PictureUpload';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    maxWidth: 400,\r\n  },\r\n  pictureUpload: {\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n}));\r\n\r\nconst CreateAuctionPage = ({ auctionStore, routerHistory }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [base64, setBase64] = useState(null);\r\n  const classes = useStyles();\r\n\r\n  const createAuction = async (title) => {\r\n    await auctionStore.createAuction(title, base64);\r\n    routerHistory.push(\"/auctions\");\r\n  };\r\n\r\n  return (\r\n    <Container width={200} fixed>\r\n      <h1>Create an Auction</h1>\r\n\r\n      <form className={classes.form} noValidate autoComplete=\"off\">\r\n        <FormControl fullWidth>\r\n          <TextField\r\n            label=\"Auction Title\"\r\n            id=\"standard-adornment-amount\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            placeholder=\"Example: Lemonade from the '60s\"\r\n            type=\"string\"\r\n            variant=\"outlined\"\r\n          />\r\n        </FormControl>\r\n        <div className={classes.pictureUpload}>\r\n          <PictureUpload onPictureSelected={base64 => setBase64(base64)} />\r\n        </div>\r\n        <div>\r\n          <Button\r\n            onClick={() => createAuction(title)}\r\n            disabled={!title.length || !base64}\r\n          >\r\n            Create auction\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default inject(\r\n  \"auctionStore\",\r\n  \"authStore\",\r\n  \"routerHistory\"\r\n)(observer(CreateAuctionPage));\r\n","import React from 'react';\r\nimport { makeStyles, CircularProgress } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(({ props }) => ({\r\n  spinnerContainer: {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    background: 'rgba(0, 0, 0, 0.2)',\r\n    position: 'fixed',\r\n    zIndex: 999,\r\n  },\r\n}));\r\n\r\nconst LoadingSpinner = ({ display }) => {\r\n  const classes = useStyles();\r\n\r\n  const displayValue = !!display ? 'flex' : 'none';\r\n  console.log('dValue', displayValue, '/ display', display);\r\n\r\n  return (\r\n    <div className={classes.spinnerContainer} style={{ display: displayValue }}>\r\n      <CircularProgress color='secondary' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;","import React from \"react\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport { Prompt, Redirect } from \"react-router-dom\";\r\n\r\nimport { Router, Switch } from \"react-router-dom\";\r\nimport history from \"./utils/history\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport AuctionsPage from \"./pages/AuctionsPage\";\r\nimport CreateAuctionPage from \"./pages/CreateAuctionPage\";\r\nimport LoadingSpinner from \"./components/LoadingSpinner\";\r\nimport { inject, observer } from \"mobx-react\";\r\n\r\nconst App = (props) => {\r\n  const { overlayStore } = props;\r\n  console.log(\"Loaded\");\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <LoadingSpinner display={overlayStore.displaySpinner} />\r\n      <Router history={history}>\r\n        <header>\r\n          <NavBar />\r\n        </header>\r\n        <Switch>\r\n          <PrivateRoute path=\"/\" exact component={AuctionsPage} />\r\n          <PrivateRoute path=\"/auctions\" component={AuctionsPage} />\r\n          <PrivateRoute path=\"/create\" component={CreateAuctionPage} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default inject(\"overlayStore\")(observer(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { observable, action } from 'mobx';\r\n\r\nclass AuthStore {\r\n  @observable token = null;\r\n  @observable claims;\r\n  @observable email;\r\n\r\n  @action\r\n  setToken(token) {\r\n    this.token = token;\r\n    console.log('Token set', token);\r\n  }\r\n\r\n  @action\r\n  setClaims(claims) {\r\n    this.claims = claims;\r\n    this.email = claims.email;\r\n  }\r\n}\r\n\r\nexport default new AuthStore();","import { observable, action } from 'mobx';\r\n\r\nclass OverlayStore {\r\n  @observable displaySpinner = false;\r\n\r\n  @action setLoadingSpinner(status) {\r\n    this.displaySpinner = status;\r\n  }\r\n}\r\n\r\nexport default new OverlayStore();","import { action, observable } from \"mobx\";\r\nimport Axios from \"axios\";\r\nimport AuthStore from \"./AuthStore\";\r\nimport OverlayStore from \"./OverlayStore\";\r\n\r\nconst axios = Axios.create({\r\n  baseURL: process.env.REACT_APP_AUCTIONS_ENDPOINT,\r\n});\r\n\r\nclass AuctionStore {\r\n  @observable auctions = [];\r\n  @observable biddingOn = null;\r\n  @observable bidAmount = 0;\r\n\r\n  @action\r\n  async fetchAuctions() {\r\n    try {\r\n      const result = await axios.get(\"/auctions?status=OPEN\", {\r\n        headers: {\r\n          Authorization: AuthStore.token,\r\n        },\r\n      });\r\n\r\n      this.auctions = result.data;\r\n    } catch (error) {\r\n      alert(\"Could not fetch auctions! Check console for more details.\");\r\n      console.error(error);\r\n    }\r\n\r\n    if (this.biddingOn) {\r\n      this.auctions.forEach((auction) => {\r\n        if (auction.id === this.biddingOn.id) {\r\n          this.bidAmount = auction.highestBid.amount + 1;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  @action\r\n  setBiddingOn(auction) {\r\n    this.biddingOn = auction;\r\n\r\n    if (auction) {\r\n      this.bidAmount = auction.highestBid.amount + 1;\r\n    } else {\r\n      this.bidAmount = 0;\r\n    }\r\n  }\r\n\r\n  @action\r\n  setBidAmount(amount) {\r\n    this.bidAmount = amount;\r\n  }\r\n\r\n  @action\r\n  async placeBid() {\r\n    const id = this.biddingOn.id;\r\n    const amount = this.bidAmount;\r\n\r\n    OverlayStore.setLoadingSpinner(true);\r\n\r\n    try {\r\n      await axios.patch(\r\n        `/auctions/${id}/bid`,\r\n        { amount },\r\n        {\r\n          headers: {\r\n            Authorization: AuthStore.token,\r\n          },\r\n        }\r\n      );\r\n    } catch (error) {\r\n      alert(\"Could not place bid! Check console for more details.\");\r\n      console.error(error);\r\n    }\r\n\r\n    this.fetchAuctions();\r\n    this.biddingOn = null;\r\n    this.bidAmount = 0;\r\n    OverlayStore.setLoadingSpinner(false);\r\n  }\r\n\r\n  async createAuction(title, pictureBase64) {\r\n    let auctionId;\r\n    OverlayStore.setLoadingSpinner(true);\r\n\r\n    try {\r\n      const createAuctionResult = await axios.post(\r\n        \"/auctions\",\r\n        { title },\r\n        {\r\n          headers: {\r\n            Authorization: AuthStore.token,\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(\"Created auction:\", createAuctionResult);\r\n\r\n      const auction = createAuctionResult.data;\r\n      auctionId = auction.id;\r\n\r\n      await axios.patch(`/auctions/${auctionId}/picture`, pictureBase64, {\r\n        headers: {\r\n          Authorization: AuthStore.token,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      alert(\"Could not create auction! Check console for more details.\");\r\n      console.error(error);\r\n    }\r\n\r\n    OverlayStore.setLoadingSpinner(false);\r\n  }\r\n}\r\n\r\nexport default new AuctionStore();\r\n","import React from \"react\";\r\nimport { Provider } from \"mobx-react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport AuctionStore from \"./stores/AuctionStore\";\r\nimport AuthStore from \"./stores/AuthStore\";\r\nimport OverlayStore from \"./stores/OverlayStore\";\r\nimport { Auth0Provider } from \"./react-auth0-spa\";\r\nimport history from \"./utils/history\";\r\nimport \"./style.scss\";\r\nimport \"./normalize.scss\";\r\n\r\nconst onRedirectCallback = (appState) => {\r\n  history.push(\r\n    appState && appState.targetUrl\r\n      ? appState.targetUrl\r\n      : window.location.pathname\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <Provider\r\n    auctionStore={AuctionStore}\r\n    authStore={AuthStore}\r\n    routerHistory={history}\r\n    overlayStore={OverlayStore}\r\n  >\r\n    <Auth0Provider\r\n      authStore={AuthStore}\r\n      domain={process.env.REACT_APP_AUTH0_DOMAIN}\r\n      client_id={process.env.REACT_APP_AUTH0_CLIENT_ID}\r\n      // redirect_uri={window.location.origin}\r\n      redirect_uri={\"https://yordi23.github.io/sls-course-frontend/\"}\r\n      onRedirectCallback={onRedirectCallback}\r\n    >\r\n      <App />\r\n    </Auth0Provider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}